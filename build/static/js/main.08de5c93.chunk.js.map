{"version":3,"sources":["utils/withTable.js","utils/contants.js","utils/util.js","utils/table.js","components/ToolBar.jsx","pages/App.jsx","index.js"],"names":["withTable","editor","deleteBackward","deleteForward","insertBreak","unit","selection","Editor","nodes","match","n","isEditor","Element","isElement","type","cell","prevNodePath","before","at","tableNode","cellPath","start","Point","equals","anchor","Range","isCollapsed","after","end","DEFAULT_TABLE","stringToSlateValue","str","_arr","trim","split","filter","Boolean","contentArr","concat","slice","res","map","rowStr","rowArr","length","createTableNode","createTableCell","text","children","cellText","tableChildren","Array","from","value","createRow","TableUtil","insertTable","rows","columns","mode","newTable","Transforms","insertNodes","insertCells","path","action","cursorPosition","row","column","console","log","existingText","arr","newSelection","splice","fill","_path","focus","item","_row","error","removeTable","select","removeNodes","edit","oldTable","this","ToolBar","useSlate","table","handleButtonClick","e","preventDefault","className","title","arrowPointAtCenter","placement","InsertRowAboveOutlined","onMouseDown","InsertRowBelowOutlined","DeleteRowOutlined","InsertRowLeftOutlined","InsertRowRightOutlined","DeleteColumnOutlined","logseq","window","logseqApp","App","logseqEditor","props","attributes","element","SlateEditor","initialTableContent","blockId","useState","setValue","useMemo","withTables","withReact","createEditor","renderElement","useCallback","onClickCancel","hideMainUI","style","background","zIndex","onClick","onChange","placeholder","showMsg","markdownContent","slateVal","rowStrs","cells","join","slateValueToString","updateBlock","then","catch","err","ready","provideStyle","registerBlockContextMenuItem","getBlock","uuid","block","format","content","renderApp","showMainUI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08de5c93.chunk.js","sourcesContent":["import { Editor, Range, Point, Element } from 'slate'\n\nconst withTable = (editor) => {\n  const { deleteBackward, deleteForward, insertBreak } = editor\n\n  editor.deleteBackward = unit => {\n    const { selection } = editor;\n    if (selection) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n      const prevNodePath = Editor.before(editor, selection)\n\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n      if (cell) {\n        const [, cellPath] = cell\n\n        const start = Editor.start(editor, cellPath)\n        if (Point.equals(selection.anchor, start)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteBackward(unit)\n  }\n  editor.deleteForward = unit => {\n    const { selection } = editor\n    if (selection && Range.isCollapsed(selection)) {\n      const [cell] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table-cell',\n      })\n\n      const prevNodePath = Editor.after(editor, selection)\n      const [tableNode] = Editor.nodes(editor, {\n        at: prevNodePath,\n        match: n => !Editor.isEditor(n) && Element.isElement && n.type === 'table-cell'\n      })\n\n\n      if (cell) {\n        const [, cellPath] = cell\n        const end = Editor.end(editor, cellPath)\n\n        if (Point.equals(selection.anchor, end)) {\n          return\n        }\n      }\n      if (!cell && tableNode) {\n        return\n      }\n    }\n\n    deleteForward(unit)\n  }\n\n  editor.insertBreak = () => {\n    const { selection } = editor\n    if (selection) {\n      const [table] = Editor.nodes(editor, {\n        match: n =>\n          !Editor.isEditor(n) &&\n          Element.isElement(n) &&\n          n.type === 'table',\n      })\n\n      if (table) {\n        return\n      }\n    }\n\n    insertBreak()\n  }\n  return editor;\n}\n\n\nexport default withTable;","export const DEFAULT_TABLE = '|||\\n|--|--|\\n|||'","import { DEFAULT_TABLE } from './contants'\n\nexport const stringToSlateValue = (str = '') => {\n  str = str || DEFAULT_TABLE\n  const _arr = str.trim().split('\\n').filter(Boolean)\n  const contentArr = [_arr[0]].concat(_arr.slice(2))\n  const res = contentArr.map(rowStr => {\n    const rowArr = rowStr.trim().split('|')\n    return rowArr.slice(1, rowArr.length - 1)\n  })\n  return createTableNode(res)\n}\n\nexport const slateValueToString = (slateVal) => {\n  let rowStrs = Array.from(slateVal.children, (row) => {\n    const cells = Array.from(row.children, (cell) => {\n      return cell.children[0].text\n    }).join('|')\n    return `|${cells}|`\n  })\n  rowStrs.splice(1, 0, `|${Array.from(slateVal.children[0].children, () => '--').join('|')}|`)\n  return rowStrs.join('\\n')\n}\n\nconst createRow = (cellText) => {\n  const newRow = Array.from(cellText, (value) => createTableCell(value))\n  return {\n    type: \"table-row\",\n    children: newRow\n  }\n}\n\nconst createTableCell = (text) => {\n  return {\n    type: \"table-cell\",\n    children: [{ text }]\n  }\n}\n\nexport const createTableNode = (cellText) => {\n  const tableChildren = Array.from(cellText, (value) => createRow(value))\n  let tableNode = { type: \"table\", children: tableChildren }\n  return tableNode\n}","import { Transforms, Editor, Range, Element } from \"slate\"\nimport { createTableNode } from \"./util\"\n\nexport class TableUtil {\n  constructor(editor) {\n    this.editor = editor;\n  }\n\n  insertTable = (rows, columns) => {\n    const [tableNode] = Editor.nodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n\n    if (tableNode) return;\n    if (!rows || !columns) {\n      return;\n    }\n    const cellText = Array.from({ length: rows }, () =>\n      Array.from({ length: columns }, () => \"\")\n    );\n    const newTable = createTableNode(cellText);\n\n    Transforms.insertNodes(this.editor, newTable, {\n      mode: \"highest\"\n    });\n    Transforms.insertNodes(\n      this.editor,\n      { type: \"paragraph\", children: [{ text: \"\" }] },\n      { mode: \"highest\" }\n    );\n  };\n\n  insertCells = (tableNode, path, selection, action) => {\n    const { anchor } = selection\n    const cursorPosition = { row: anchor?.path[1], column: anchor?.path[2] }\n    console.log('[faiz:] === selection', selection)\n\n    let existingText = Array.from(tableNode.children, (rows) =>\n      Array.from(rows.children, (arr) => arr.children[0].text)\n    );\n    const columns = existingText[0].length;\n    let newSelection = {...selection}\n\n    console.log('[faiz:] === existingText', existingText)\n\n    if (action === 'insert-row-above') {\n      existingText.splice(cursorPosition.row, 0, Array(columns).fill(''))\n      let _path = [...anchor.path]\n      _path.splice(1, 1, cursorPosition.row + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-row-below') {\n      existingText.splice(cursorPosition.row + 1, 0, Array(columns).fill(''))\n    } else if (action === 'insert-column-above') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 0, '')\n        return _row\n      })\n      let _path = [...anchor.path]\n      _path.splice(2, 1, cursorPosition.column + 1)\n      newSelection = {\n        anchor: {\n          ...newSelection.anchor,\n          path: _path,\n        },\n        focus: {\n          ...newSelection.focus,\n          path: _path,\n        }\n      }\n    } else if (action === 'insert-column-below') {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column + 1, 0, '')\n        return _row\n      })\n    } else if (action === 'delete-row' && existingText?.length > 1) {\n      existingText.splice(cursorPosition.row, 1)\n    } else if (action === 'delete-column' && columns > 1 ) {\n      existingText = Array.from(existingText, (item) => {\n        let _row = [...item]\n        _row.splice(cursorPosition.column, 1)\n        return _row\n      })\n    } else {\n      return console.error('[insert cells run error]: unsupport action or can not delete', action, columns)\n    }\n    console.log('[faiz:] === xxxxx', existingText)\n    this.removeTable()\n    const newTable = createTableNode(existingText);\n    Transforms.insertNodes(this.editor, newTable, {\n      at: path\n    });\n    if (action !== 'delete-row' && action !== 'delete-column') {\n      // keep cursor position\n      Transforms.select(this.editor, newSelection)\n    }\n  };\n\n  removeTable = () => {\n    Transforms.removeNodes(this.editor, {\n      match: (n) =>\n        !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\",\n      mode: \"highest\"\n    });\n  };\n\n  /**\n   * insert or delete\n   * @param {string} action 'insert-row-above' | 'insert-row-below' | 'insert-row-above' | 'insert-row-below' | 'delete-row' | 'delete-column'\n   */\n  edit = (action = 'insert-row-below') => {\n    const { selection } = this.editor;\n    if (!!selection && Range.isCollapsed(selection)) {\n      const [tableNode] = Editor.nodes(this.editor, {\n        match: (n) =>\n          !Editor.isEditor(n) && Element.isElement(n) && n.type === \"table\"\n      });\n      if (tableNode) {\n        const [oldTable, path] = tableNode;\n        console.log('[faiz:] === path', oldTable, path)\n        this.insertCells(oldTable, path, selection, action);\n      }\n    }\n  };\n}\n","import { useSlate } from 'slate-react'\nimport { InsertRowAboveOutlined, InsertRowBelowOutlined, InsertRowLeftOutlined, InsertRowRightOutlined, DeleteRowOutlined, DeleteColumnOutlined } from '@ant-design/icons'\nimport { Tooltip } from 'antd'\n\nimport { TableUtil } from '../utils/table'\n\nconst ToolBar = () => {\n  const editor = useSlate()\n\n  const table = new TableUtil(editor)\n\n  const handleButtonClick = (e, action) => {\n    e.preventDefault()\n    table.edit(action)\n  }\n\n  return (\n    <div className=\"mt-8 mb-2 space-x-2 bg-white inline-flex px-3 py-1 rounded-md shadow-sm\">\n      <Tooltip title=\"insert row above\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowAboveOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-above')} />\n      </Tooltip>\n      <Tooltip title=\"insert rowbelow\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowBelowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-row-below')} />\n      </Tooltip>\n      <Tooltip title=\"delete row\" arrowPointAtCenter placement=\"topLeft\">\n        <DeleteRowOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-row')} />\n      </Tooltip>\n\n      <div className=\"border-l border-gray-300\"></div>\n\n      <Tooltip title=\"insert column above\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowLeftOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-above')} />\n      </Tooltip>\n      <Tooltip title=\"insert column below\" arrowPointAtCenter placement=\"topLeft\">\n        <InsertRowRightOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'insert-column-below')} />\n      </Tooltip>\n      <Tooltip title=\"delete column\" arrowPointAtCenter placement=\"topLeft\">\n        <DeleteColumnOutlined className=\"text-xl cursor-pointer hover:opacity-70\" onMouseDown={e => handleButtonClick(e, 'delete-column')} />\n      </Tooltip>\n      \n    </div>\n  )\n}\n\nexport default ToolBar","import { useState, useMemo, useCallback } from 'react'\nimport { createEditor } from 'slate'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { Button } from 'antd'\n\nimport withTables from '../utils/withTable.js'\nimport ToolBar from '../components/ToolBar'\nimport { stringToSlateValue, slateValueToString } from '../utils/util.js'\nimport { DEFAULT_TABLE } from '../utils/contants'\n\nimport './App.css'\n\nconst logseq = window.logseq\nconst logseqApp = logseq.App\nconst logseqEditor = logseq.Editor\n\nconst Element = props => {\n  const { attributes, children, element } = props\n  switch (element.type) {\n    case 'table':\n      return (<table>\n        <tbody {...attributes}>{children}</tbody>\n      </table>)\n    case 'table-row':\n      return <tr {...attributes}>{children}</tr>\n    case 'table-cell':\n      return <td {...attributes}>{children}</td>\n    default:\n      return <p {...attributes}>{children}</p>\n  }\n}\n\nconst SlateEditor = ({ initialTableContent = DEFAULT_TABLE, blockId }) => {\n  // const [value, setValue] = useState([\n  //   // {\n  //   //   type: 'paragaph',\n  //   //   children: [{ text: 'First line of text in Slate JS. ' }],\n  //   // },\n    // {\n    //   type: 'table',\n    //   children: [\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'title2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //     {\n    //       type: 'table-row',\n    //       children: [\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content1',\n    //             }\n    //           ]\n    //         },\n    //         {\n    //           type: 'table-cell',\n    //           children: [\n    //             {\n    //               text: 'content2',\n    //             }\n    //           ]\n    //         },\n    //       ]\n    //     },\n    //   ]\n    // }\n  // ])\n  console.log('[faiz:] === initialTableContent', initialTableContent)\n  const [value, setValue] = useState([stringToSlateValue(initialTableContent)])\n  console.log('[faiz:] === createTableNode', stringToSlateValue(initialTableContent), initialTableContent)\n\n  const editor = useMemo(() => withTables(withReact(createEditor())), [])\n  const renderElement = useCallback(props => <Element {...props} />, [])\n\n  const onClickCancel = () => {\n    logseq.hideMainUI()\n  }\n  const onClickConfirm = () => {\n    if (!blockId) return logseqApp.showMsg('uuid error')\n    console.log('[faiz:] === onClickConfirm', blockId, value)\n    const markdownContent = slateValueToString(value[0])\n    logseqEditor.updateBlock(blockId, markdownContent)\n      .then(() => {\n        logseqApp.showMsg('markdown table overwrite success')\n        logseq.hideMainUI()\n      })\n      .catch(err => {\n        logseqApp.showMsg('markdown table overwrite error', err)\n      })\n  }\n\n  return (\n    <div className=\"w-screen h-screen flex justify-center items-center\">\n      <div className=\"w-screen h-screen absolute\" style={{ background: 'rgba(0, 0, 0, .3)', zIndex: -1 }} onClick={onClickCancel}></div>\n      <div className=\"w-2/3 h-1/2\">\n        <Slate\n          editor={editor}\n          value={value}\n          onChange={setValue}\n        >\n          <ToolBar />\n          <Editable\n            placeholder='Write something'\n            renderElement={renderElement}\n          />\n        </Slate>\n        <div className=\"mt-2 flex justify-end\">\n          <Button className=\"mr-1 rounded\" onClick={onClickCancel}>Cancel</Button>\n          <Button className=\"rounded\" type=\"primary\" onClick={onClickConfirm}>Confirm</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SlateEditor","import '@logseq/libs'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport './index.css'\nimport App from './pages/App'\nimport { DEFAULT_TABLE } from './utils/contants'\n\nconst logseq = window.logseq\nconst logseqEditor = logseq.Editor\nconst logseqApp = logseq.App\n\nlogseq.ready().then(() => {\n  // padding-left: var(--ls-left-sidebar-width);\n  logseq.provideStyle(`\n    iframe#hayden_markdown_table.lsp-iframe-sandbox {\n      z-index: 10;\n    }\n  `)\n  console.log('[faiz:] === markdown-table-editor-plugin loaded')\n  logseqEditor.registerBlockContextMenuItem('woz-markdown-table-editor', (e) => {\n    console.log('[faiz:] === woz-markdown-table-editor', e)\n    logseqEditor.getBlock(e.uuid).then(block => {\n      console.log('[faiz:] === block', block)\n      const { format, content } = block\n      if (format !== 'markdown') return logseqApp.showMsg('woz-markdown-table-editor only support markdown')\n      renderApp(content || DEFAULT_TABLE, e.uuid)\n      logseq.showMainUI()\n    })\n  })\n})\n\nconst renderApp = (initialTableContent, blockId) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App initialTableContent={initialTableContent} blockId={blockId} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n}\n\n\n// debug\n// renderApp()\n"],"sourceRoot":""}